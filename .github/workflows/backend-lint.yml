name: Backend (Python Flask) Lint

on:
  push:
    branches: [ q-labeler ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        # Install project dependencies if they exist
        if [ -f requirements.txt ]; then pip install -r requirements.txt || echo "⚠️ Some dependencies failed to install"; fi
    
    - name: Lint with flake8
      run: |
        cd backend
        # stop the build if there are Python syntax errors or undefined names
        flake8 --exclude=venv . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. Allow up to 400 style warnings for legacy code
        flake8 --exclude=venv *.py --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics | head -20
    
    - name: Check code formatting with black
      run: |
        cd backend
        black --check --diff *.py || echo "⚠️ Code formatting issues found (non-blocking)"
    
    - name: Check import sorting with isort
      run: |
        cd backend
        isort --check-only --diff *.py || echo "⚠️ Import sorting issues found (non-blocking)"
    
    - name: Type check with mypy
      run: |
        cd backend
        mypy *.py --ignore-missing-imports || echo "⚠️ Type checking issues found (non-blocking)"